// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/12/String.jack

/**
 * The String type.
 */
class String {

    field Array str;
    field int length, size;

    /** Constructs a new empty String with a maximum length of
     *  maxLength. */
    constructor String new(int maxLength) {
	if(~(maxLength=0)){
		let str=Array.new(maxLength);
	}
	let size=maxLength;
	let length=0;
	return this;
    }

    /** De-allocates the string and frees its space. */
    method void dispose() {
	if(~(size=0)){
		do str.dispose();
	}
	let size=0;
	let length=0;
	return;
    }

    /** Returns the current length of this String. */
    method int length() {
	return length;
    }

    /** Returns the character at location j. */
    method char charAt(int j) {
	if((~(j<0))&(j<length)){
		return str[j];
	}
	return Sys.error(15);
    }

    /** Sets the j'th character of this string to be c. */
    method void setCharAt(int j, char c) {
	if((j>0)&(j<length)){
		let str[j]=c;
	}
	else{
		do Sys.error(16);
	}
	return;
    }

    /** Appends the character c to the end of this String.
     *  Returns this string as the return value. */
    method String appendChar(char c) {
	if(length<size){
		let str[length]=c;
		let length=length+1;
	}
	else{
		do Sys.error(17);
	}
	return this;
    }

    /** Erases the last character from this String. */
    method void eraseLastChar() {
	let length=length-1;
	return;
    }

    /** Returns the integer value of this String until the first non
     *  numeric character. */
    method int intValue() {
	var int i, number,flag;
	if(str[0]=45){
		let flag=1;
		let i=1;
	}
	while(i<length){
		let number=(number*10)+str[i]-48;
		let i=i+1;
	}
	if(flag=1){
		return (-number);
	}
	return number;
    }

    /** Sets this String to hold a representation of the given
     *  number. */
    method void setInt(int number) {
	if(number<0){
		let size=1;
		let length=0;
		do appendChar(45);
		do setInt(-(number/10));
		let size=size+1;
		do appendChar(-(number-((number/10)*10))+48);
		return;
	}
	if(number<10){
		if(~((size=1)&(str[0]=45))){
			let size=0;
			let length=0;
		}
		let size=size+1;
		do appendChar(number+48);
	}
	else{
		do setInt(number/10);
		let size=size+1;
		do appendChar(number-((number/10)*10)+48);
	}
	return;
    }

    /** Returns the new line character. */
    function char newLine() {
	return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
	return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
	return 34;
    }
}
