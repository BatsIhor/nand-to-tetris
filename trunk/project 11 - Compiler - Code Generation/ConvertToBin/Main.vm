function Main.main 2
push constant 8001
push constant 16
push constant 1
neg
call Main.fillMemory 3
pop temp 6
push constant 8000
call Memory.peek 1
pop local 1
push local 1
call Main.convert 1
pop temp 6
push constant 0
return
function Main.convert 3
push constant 1
neg
pop local 2
label WHILE0
push local 2
not
if-goto ENDWHILE0
push local 1
push constant 1
add
pop local 1
push local 0
call Main.nextMask 1
pop local 0
push constant 9000
push local 1
add
push local 0
call Memory.poke 2
pop temp 6
push local 1
push constant 16
gt
not
not
if-goto ELSE0
push argument 0
push local 0
and
push constant 0
eq
not
not
if-goto ELSE1
push constant 8000
push local 1
add
push constant 1
call Memory.poke 2
pop temp 6
goto ENDIF1
label ELSE1
push constant 8000
push local 1
add
push constant 0
call Memory.poke 2
pop temp 6
label ENDIF1
goto ENDIF0
label ELSE0
push constant 0
pop local 2
label ENDIF0
goto WHILE0
label ENDWHILE0
push constant 0
return
function Main.nextMask 0
push argument 0
push constant 0
eq
not
if-goto ELSE2
push constant 1
return
goto ENDIF2
label ELSE2
push argument 0
push constant 2
call Math.multiply 2
return
label ENDIF2
function Main.fillMemory 0
label WHILE1
push argument 1
push constant 0
gt
not
if-goto ENDWHILE1
push argument 0
push argument 2
call Memory.poke 2
pop temp 6
push argument 1
push constant 1
sub
pop argument 1
push argument 0
push constant 1
add
pop argument 0
goto WHILE1
label ENDWHILE1
push constant 0
return
